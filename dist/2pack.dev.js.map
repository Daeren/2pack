{"version":3,"file":"2pack.dev.js","mappings":"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","sources":["webpack://packer/webpack/universalModuleDefinition","webpack://packer/./src/index.js","webpack://packer/webpack/bootstrap","webpack://packer/webpack/before-startup","webpack://packer/webpack/startup","webpack://packer/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"packer\"] = factory();\n\telse\n\t\troot[\"packer\"] = factory();\n})(self, () => {\nreturn ","const XBuffer = (typeof(Buffer) !== 'undefined' ? Buffer : (function() {\r\n    const MAX_ARGUMENTS_LENGTH = 0x1000;\r\n    const K_MAX_LENGTH = 0x7fffffff;\r\n\r\n    //---------------------]>\r\n\r\n    return (function() {\r\n        const Buffer = function() {};\r\n\r\n        //--------]>\r\n\r\n        Buffer.allocUnsafe = allocUnsafe;\r\n        Buffer.allocUnsafeSlow = allocUnsafe;\r\n\r\n        //--------]>\r\n\r\n        return Buffer;\r\n\r\n        //--------]>\r\n\r\n        function allocUnsafe(length) {\r\n            if(length > K_MAX_LENGTH) {\r\n                throw new RangeError('Invalid typed array length');\r\n            }\r\n\r\n            const buf = new Uint8Array(length);\r\n\r\n            buf.write = write;\r\n            buf.toString = toString;\r\n\r\n            return buf;\r\n        }\r\n\r\n        //----)>\r\n\r\n        function write(string, offset, length) {\r\n            offset = offset || 0;\r\n            length = length || this.length;\r\n\r\n            const remaining = this.length - offset;\r\n\r\n            if(!length || length > remaining) {\r\n                length = remaining;\r\n            }\r\n\r\n            return blitBuffer(utf8ToBytes(string, this.length - offset), this, offset, length);\r\n        }\r\n\r\n        function toString(encoding, start, end) {\r\n            start = start || 0;\r\n            end = end || this.length;\r\n\r\n            return end === 0 ? '' : utf8Slice(this, start, end);\r\n        }\r\n    })();\r\n\r\n    //---------------------]>\r\n\r\n    function utf8ToBytes(string, units) {\r\n        units = units || Infinity;\r\n\r\n        const length = string.length;\r\n\r\n        let codePoint;\r\n        let leadSurrogate = null;\r\n        let bytes = new Array();\r\n\r\n        for(let i = 0; i < length; ++i) {\r\n            codePoint = string.charCodeAt(i);\r\n\r\n            // is surrogate component\r\n            if(codePoint > 0xD7FF && codePoint < 0xE000) {\r\n                // last char was a lead\r\n                if(!leadSurrogate) {\r\n                    // no lead yet\r\n                    if(codePoint > 0xDBFF) {\r\n                        // unexpected trail\r\n                        if((units -= 3) > -1) {\r\n                            bytes.push(0xEF, 0xBF, 0xBD);\r\n                        }\r\n\r\n                        continue;\r\n                    }\r\n                    else if(i + 1 === length) {\r\n                        // unpaired lead\r\n                        if((units -= 3) > -1) {\r\n                            bytes.push(0xEF, 0xBF, 0xBD);\r\n                        }\r\n\r\n                        continue;\r\n                    }\r\n\r\n                    // valid lead\r\n                    leadSurrogate = codePoint;\r\n\r\n                    continue;\r\n                }\r\n\r\n                // 2 leads in a row\r\n                if(codePoint < 0xDC00) {\r\n                    if((units -= 3) > -1) {\r\n                        bytes.push(0xEF, 0xBF, 0xBD);\r\n                    }\r\n\r\n                    leadSurrogate = codePoint;\r\n\r\n                    continue;\r\n                }\r\n\r\n                // valid surrogate pair\r\n                codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\r\n            }\r\n            else if(leadSurrogate) {\r\n                // valid bmp char, but last char was a lead\r\n                if((units -= 3) > -1) {\r\n                    bytes.push(0xEF, 0xBF, 0xBD);\r\n                }\r\n            }\r\n\r\n            leadSurrogate = null;\r\n\r\n            // encode utf8\r\n            if(codePoint < 0x80) {\r\n                if((units -= 1) < 0) {\r\n                    break;\r\n                }\r\n\r\n                bytes.push(codePoint);\r\n            }\r\n            else if(codePoint < 0x800) {\r\n                if((units -= 2) < 0) {\r\n                    break;\r\n                }\r\n\r\n                bytes.push(\r\n                    codePoint >> 0x6 | 0xC0,\r\n                    codePoint & 0x3F | 0x80\r\n                );\r\n            }\r\n            else if(codePoint < 0x10000) {\r\n                if((units -= 3) < 0) {\r\n                    break;\r\n                }\r\n\r\n                bytes.push(\r\n                    codePoint >> 0xC | 0xE0,\r\n                    codePoint >> 0x6 & 0x3F | 0x80,\r\n                    codePoint & 0x3F | 0x80\r\n                );\r\n            }\r\n            else if(codePoint < 0x110000) {\r\n                if((units -= 4) < 0) {\r\n                    break;\r\n                }\r\n\r\n                bytes.push(\r\n                    codePoint >> 0x12 | 0xF0,\r\n                    codePoint >> 0xC & 0x3F | 0x80,\r\n                    codePoint >> 0x6 & 0x3F | 0x80,\r\n                    codePoint & 0x3F | 0x80\r\n                );\r\n            }\r\n            else {\r\n                throw new Error('Invalid code point');\r\n            }\r\n        }\r\n\r\n        return bytes;\r\n    }\r\n\r\n    function utf8Slice(buf, start, end) {\r\n        end = Math.min(buf.length, end);\r\n\r\n        const res = new Array();\r\n        let i = start;\r\n\r\n        while(i < end) {\r\n            let firstByte = buf[i];\r\n            let codePoint = null;\r\n            let bytesPerSequence = (firstByte > 0xEF) ? 4\r\n                : (firstByte > 0xDF) ? 3\r\n                    : (firstByte > 0xBF) ? 2\r\n                        : 1;\r\n\r\n            if(i + bytesPerSequence <= end) {\r\n                let secondByte, thirdByte, fourthByte, tempCodePoint;\r\n\r\n                switch(bytesPerSequence) {\r\n                    case 1:\r\n                        if(firstByte < 0x80) {\r\n                            codePoint = firstByte;\r\n                        }\r\n\r\n                        break;\r\n\r\n                    case 2:\r\n                        secondByte = buf[i + 1];\r\n\r\n                        if((secondByte & 0xC0) === 0x80) {\r\n                            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F);\r\n\r\n                            if(tempCodePoint > 0x7F) {\r\n                                codePoint = tempCodePoint;\r\n                            }\r\n                        }\r\n\r\n                        break;\r\n\r\n                    case 3:\r\n                        secondByte = buf[i + 1];\r\n                        thirdByte = buf[i + 2];\r\n\r\n                        if((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\r\n                            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F);\r\n\r\n                            if(tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\r\n                                codePoint = tempCodePoint;\r\n                            }\r\n                        }\r\n\r\n                        break;\r\n\r\n                    case 4:\r\n                        secondByte = buf[i + 1];\r\n                        thirdByte = buf[i + 2];\r\n                        fourthByte = buf[i + 3];\r\n\r\n                        if((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\r\n                            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F);\r\n\r\n                            if(tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\r\n                                codePoint = tempCodePoint;\r\n                            }\r\n                        }\r\n                }\r\n            }\r\n\r\n            if(codePoint === null) {\r\n                // we did not generate a valid codePoint so insert a\r\n                // replacement char (U+FFFD) and advance only 1 byte\r\n                codePoint = 0xFFFD;\r\n                bytesPerSequence = 1;\r\n            }\r\n            else if(codePoint > 0xFFFF) {\r\n                // encode to utf16 (surrogate pair dance)\r\n                codePoint -= 0x10000;\r\n                res.push(codePoint >>> 10 & 0x3FF | 0xD800);\r\n                codePoint = 0xDC00 | codePoint & 0x3FF;\r\n            }\r\n\r\n            res.push(codePoint);\r\n            i += bytesPerSequence;\r\n        }\r\n\r\n        return decodeCodePointsArray(res);\r\n    }\r\n\r\n    //--------)>\r\n\r\n    function decodeCodePointsArray(codePoints) {\r\n        const len = codePoints.length;\r\n\r\n        if(len <= MAX_ARGUMENTS_LENGTH) {\r\n            return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\r\n        }\r\n\r\n        // Decode in chunks to avoid 'call stack size exceeded'.\r\n        let res = '';\r\n        let i = 0;\r\n\r\n        while(i < len) {\r\n            res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\r\n        }\r\n\r\n        return res;\r\n    }\r\n})());\r\n\r\nconst isBigEndian = (function() {\r\n    const a = new Uint32Array([0x12345678]);\r\n    const b = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\r\n\r\n    return b[0] === 0x12;\r\n})();\r\n\r\n//-----------------------------------------------------\r\n\r\nmodule.exports = function(schema) {\r\n    const TYPE_BIN      = 1;\r\n    const TYPE_STR      = 2;\r\n    const TYPE_INT      = 4;\r\n    const TYPE_UINT     = 8;\r\n    const TYPE_FLOAT    = 16;\r\n    const TYPE_JSON     = 32;\r\n\r\n    //-----------------]>\r\n\r\n    if(schema === null) {\r\n        schema = [];\r\n    }\r\n\r\n    if(!schema || !Array.isArray(schema) && typeof(schema) !== 'string') {\r\n        throw new Error('Invalid schema');\r\n    }\r\n\r\n    //-----------------]>\r\n\r\n    const schemaContNames = Array.isArray(schema) ? schema.some((e) => e.split(':').length >= 2) : false;\r\n    const schemaDontContNames = Array.isArray(schema) ? schema.some((e) => e.split(':').length < 2) : true;\r\n\r\n    //-----------------]>\r\n\r\n    if(schemaContNames && schemaDontContNames) {\r\n        throw new Error('A schema has mixed names/types');\r\n    }\r\n\r\n    //-----------------]>\r\n\r\n    const int64size     = typeof(BigInt64Array) !== 'undefined' ? BigInt64Array.BYTES_PER_ELEMENT : 0;\r\n\r\n    const isPrimitive   = typeof(schema) === 'string';\r\n    const schLen        = isPrimitive ? 1 : schema.length;\r\n\r\n    const fields        = new Array(schLen);\r\n\r\n    //---------)>\r\n\r\n    let pktDataBuf      = null;\r\n    let pktOffset       = 0;\r\n    let pktMinSize      = 0;\r\n    let pktMaxSize      = 0;\r\n\r\n    let pktDataHolderArr = new Array();\r\n    let pktDataHolderObj = Object.create(null);\r\n\r\n    //-----------------]>\r\n\r\n    for(let i = 0; i < schLen; ++i) {\r\n        const [subType, name] = isPrimitive ? [schema, ''] : schema[i].split(':').reverse();\r\n\r\n        const type = getTypeId(subType.replace(/[\\d\\[\\]]/g, ''));\r\n        const size = parseInt(subType.replace(/\\D/g, ''), 10) || 0;\r\n\r\n        const [\r\n            bytes,   // BYTES_PER_ELEMENT\r\n            bufType, // dataView\r\n            bufAType // dataSizeView\r\n        ] = buildTypedBuf(type, size);\r\n\r\n        const bufBytes = ((type & TYPE_STR) === TYPE_STR || (type & TYPE_BIN) === TYPE_BIN) ? null : new Uint8Array(bufType.buffer);\r\n        const bufABytes = bufAType ? new Uint8Array(bufAType.buffer) : null;\r\n\r\n        //---------]>\r\n\r\n        fields[i] = [name, type, bytes, bufType, bufBytes, bufAType, bufABytes];\r\n\r\n        pktMinSize += bytes;\r\n        pktMaxSize += bufType.byteLength;\r\n    }\r\n\r\n    offset(0);\r\n\r\n    //-----------------]>\r\n\r\n    return {\r\n        get minSize() { return pktMinSize; },\r\n        get maxSize() { return pktMaxSize; },\r\n\r\n        get offset() { return pktOffset; },\r\n        set offset(value) { offset(value); },\r\n\r\n        pack,\r\n        unpack\r\n    };\r\n\r\n    //-----------------]>\r\n\r\n    function offset(value) {\r\n        value = parseInt(value, 10) || 0;\r\n\r\n        pktMinSize = (pktMinSize - pktOffset) + value;\r\n        pktMaxSize = (pktMaxSize - pktOffset) + value;\r\n        pktOffset = value;\r\n\r\n        pktDataBuf = XBuffer.allocUnsafeSlow(pktMaxSize);\r\n    }\r\n\r\n    //------)>\r\n\r\n    /**\r\n     *\r\n     * @param {(Array|Object)} data\r\n     * @param {(undefined|Buffer)} target\r\n     * @returns {(Buffer)} Browser Buffer - Uint8Array\r\n     */\r\n    function pack(data, target) {\r\n        const isArray = Array.isArray(data);\r\n        const outTg = !!target;\r\n\r\n        let fieldIdx = schLen;\r\n        let pktSize = pktOffset;\r\n\r\n        let input = data;\r\n\r\n        let field;\r\n        let name, type, bytes, bufType, bufBytes, bufAType, bufABytes;\r\n\r\n        //--------]>\r\n\r\n        target = target || pktDataBuf;\r\n\r\n        //--------]>\r\n\r\n        while(fieldIdx--) {\r\n            field = fields[fieldIdx];\r\n            [name, type, bytes, bufType, bufBytes, bufAType, bufABytes] = field;\r\n\r\n            //------]>\r\n\r\n            if(!isPrimitive && data) {\r\n                input = data[isArray ? fieldIdx : name];\r\n            }\r\n\r\n            //------]>\r\n\r\n            if((type & TYPE_STR) === TYPE_STR || (type & TYPE_BIN) === TYPE_BIN) {\r\n                if((type & TYPE_JSON) === TYPE_JSON) {\r\n                    input = JSON.stringify(input);\r\n                }\r\n\r\n                if(input) {\r\n                    bytes += bufAType[0] = ((type & TYPE_BIN) === TYPE_BIN)\r\n                        ? blitBuffer(input, target, pktSize + bytes, bufType.byteLength - bytes)\r\n                        : target.write(input, pktSize + bytes, bufType.byteLength - bytes);\r\n\r\n                    if(isBigEndian) {\r\n                        target[pktSize] = bufABytes[1];\r\n                        target[pktSize + 1] = bufABytes[0];\r\n                    }\r\n                    else {\r\n                        target[pktSize] = bufABytes[0];\r\n                        target[pktSize + 1] = bufABytes[1];\r\n                    }\r\n\r\n                    pktSize += bytes;\r\n\r\n                }\r\n                else {\r\n                    target[pktSize] = 0;\r\n                    target[pktSize + 1] = 0;\r\n\r\n                    pktSize += 2;\r\n                }\r\n            }\r\n            else {\r\n                let zeroValue = 0;\r\n\r\n                if(bytes === int64size) {\r\n                    zeroValue = BigInt('0');\r\n                }\r\n\r\n                if(input == null || typeof(input) !== 'bigint' && (isNaN(input) || !isFinite(input))) {\r\n                    bufType[0] = zeroValue;\r\n                }\r\n                else {\r\n                    bufType[0] = input;\r\n\r\n                    if(isBigEndian && bufType.byteLength > 1) {\r\n                        bufBytes.reverse();\r\n                    }\r\n                }\r\n\r\n                let tIdx = 0;\r\n\r\n                while(tIdx < bytes) {\r\n                    target[pktSize] = bufBytes[tIdx];\r\n\r\n                    ++pktSize;\r\n                    ++tIdx;\r\n                }\r\n            }\r\n        }\r\n\r\n        //--------]>\r\n\r\n        return !outTg && pktSize < pktMaxSize ? target.slice(0, pktSize) : target;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {(Uint8Array|Buffer)} bin\r\n     * @param {number} offset\r\n     * @param {number} length\r\n     * @param {Function} cbEndInfo\r\n     * @param {(Array|Object)} target\r\n     * @param {boolean} asCopy\r\n     * @param {boolean} asArray\r\n     * @returns {(undefined|null|Array|Object)}\r\n     */\r\n    function unpack(bin, offset, length, cbEndInfo, target, asCopy = true, asArray = false) {\r\n        if(!schLen) {\r\n            if(cbEndInfo) {\r\n                cbEndInfo(pktOffset);\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        //--------]>\r\n\r\n        if(!bin || typeof(bin) !== 'object' || bin.byteLength < pktMinSize) {\r\n            return undefined;\r\n        }\r\n\r\n        if(schemaDontContNames) {\r\n            asArray = true;\r\n        }\r\n\r\n        if(!isPrimitive) {\r\n            target = target || (asCopy ? (asArray ? new Array() : Object.create(null)) : (asArray ? pktDataHolderArr : pktDataHolderObj));\r\n        }\r\n\r\n        //--------]>\r\n\r\n        let fieldIdx = schLen;\r\n        let curOffset = offset + pktOffset;\r\n\r\n        const pktOffsetStart = curOffset;\r\n\r\n        //--------]>\r\n\r\n        while(fieldIdx--) {\r\n            let field;\r\n            let [name, type, bytes, bufType, bufBytes, bufAType, bufABytes] = fields[fieldIdx];\r\n\r\n            //------]>\r\n\r\n            for(let i = 0; i < bytes; ++i) {\r\n                if(curOffset >= length) {\r\n                    return undefined;\r\n                }\r\n\r\n                if(bufAType) {\r\n                    bufABytes[i] = bin[curOffset];\r\n                }\r\n                else {\r\n                    bufBytes[i] = bin[curOffset];\r\n                }\r\n\r\n                ++curOffset;\r\n            }\r\n\r\n            //------]>\r\n\r\n            if((type & TYPE_STR) === TYPE_STR || (type & TYPE_BIN) === TYPE_BIN) {\r\n                if(isBigEndian) {\r\n                    bufABytes.reverse();\r\n                }\r\n\r\n                //--------]>\r\n\r\n                const byteLen = bufAType[0];\r\n\r\n                //--------]>\r\n\r\n                if(!byteLen) {\r\n                    field = (type & TYPE_BIN) === TYPE_BIN || (type & TYPE_JSON) === TYPE_JSON ? null : '';\r\n                }\r\n                else if(byteLen >= length || byteLen > bufType.byteLength) {\r\n                    return undefined;\r\n                }\r\n                else {\r\n                    if((type & TYPE_BIN) === TYPE_BIN) {\r\n                        const buf = XBuffer.allocUnsafeSlow(byteLen);\r\n\r\n                        for(let i = 0; i < byteLen; ++i, ++curOffset) {\r\n                            buf[i] = bin[curOffset];\r\n                        }\r\n\r\n                        field = buf;\r\n                    }\r\n                    else {\r\n                        if(bin instanceof(XBuffer)) {\r\n                            field = bin.toString('utf8', curOffset, curOffset + byteLen);\r\n                        }\r\n                        else if(XBuffer.from) {\r\n                            field = XBuffer.from(bin).toString('utf8', curOffset, curOffset + byteLen);\r\n                        }\r\n                        else if(typeof(TextDecoder) !== 'undefined') {\r\n                            field = (new TextDecoder()).decode(bin.slice(curOffset, curOffset + byteLen).buffer)\r\n                        }\r\n                        else {\r\n                            field = bufType.toString.call(bin, 'utf8', curOffset, curOffset + byteLen);\r\n                        }\r\n\r\n                        curOffset += byteLen;\r\n                    }\r\n\r\n                    if((type & TYPE_JSON) === TYPE_JSON) {\r\n                        try {\r\n                            field = JSON.parse(field);\r\n                        }\r\n                        catch(e) {\r\n                            field = null;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if(isBigEndian && bufType.byteLength > 1) {\r\n                    bufBytes.reverse();\r\n                }\r\n\r\n                field = bufType[0];\r\n            }\r\n\r\n            //------]>\r\n\r\n            if(isPrimitive) {\r\n                target = field;\r\n            }\r\n            else {\r\n                if(asArray) {\r\n                    name = fieldIdx;\r\n                }\r\n\r\n                target[name] = field;\r\n            }\r\n        }\r\n\r\n        if(cbEndInfo) {\r\n            cbEndInfo(pktOffset + curOffset - pktOffsetStart);\r\n        }\r\n\r\n        //--------]>\r\n\r\n        return target;\r\n    }\r\n\r\n    //-----------------]>\r\n\r\n    function buildTypedBuf(type, size) {\r\n        if((type & TYPE_BIN) === TYPE_BIN) {\r\n            return [Uint16Array.BYTES_PER_ELEMENT, XBuffer.allocUnsafeSlow((size || 1024) + Uint16Array.BYTES_PER_ELEMENT), new Uint16Array(1)];\r\n        }\r\n\r\n        if((type & TYPE_JSON) === TYPE_JSON) {\r\n            return [Uint16Array.BYTES_PER_ELEMENT, XBuffer.allocUnsafeSlow((size || 8192) + Uint16Array.BYTES_PER_ELEMENT), new Uint16Array(1)];\r\n        }\r\n\r\n        if((type & TYPE_STR) === TYPE_STR) {\r\n            return [Uint16Array.BYTES_PER_ELEMENT, XBuffer.allocUnsafeSlow((size || 256) + Uint16Array.BYTES_PER_ELEMENT), new Uint16Array(1)];\r\n        }\r\n\r\n        switch(type) {\r\n            case TYPE_INT:\r\n                switch(size) {\r\n                    case 8: return [Int8Array.BYTES_PER_ELEMENT, new Int8Array(1)];\r\n                    case 16: return [Int16Array.BYTES_PER_ELEMENT, new Int16Array(1)];\r\n                    case 32: return [Int32Array.BYTES_PER_ELEMENT, new Int32Array(1)];\r\n                    case 64: return [BigInt64Array.BYTES_PER_ELEMENT, new BigInt64Array(1)];\r\n\r\n                    default:\r\n                        throw new Error(`Unknown size: ${size} | ${type}`);\r\n                }\r\n\r\n\r\n            case TYPE_UINT:\r\n                switch(size) {\r\n                    case 8: return [Uint8Array.BYTES_PER_ELEMENT, new Uint8Array(1)];\r\n                    case 16: return [Uint16Array.BYTES_PER_ELEMENT, new Uint16Array(1)];\r\n                    case 32: return [Uint32Array.BYTES_PER_ELEMENT, new Uint32Array(1)];\r\n                    case 64: return [BigUint64Array.BYTES_PER_ELEMENT, new BigUint64Array(1)];\r\n\r\n                    default:\r\n                        throw new Error(`Unknown size: ${size} | ${type}`);\r\n                }\r\n\r\n\r\n            case TYPE_FLOAT:\r\n                switch(size) {\r\n                    case 32: return [Float32Array.BYTES_PER_ELEMENT, new Float32Array(1)];\r\n                    case 64: return [Float64Array.BYTES_PER_ELEMENT, new Float64Array(1)];\r\n\r\n                    default:\r\n                        throw new Error(`Unknown size: ${size} | ${type}`);\r\n                }\r\n\r\n            default:\r\n                throw new Error(`Unknown type: ${type} | ${type}`);\r\n        }\r\n    }\r\n\r\n    function getTypeId(type) {\r\n        switch(type) {\r\n            case 'b':\r\n            case 'bin':\r\n                return TYPE_BIN;\r\n\r\n            case 'j':\r\n            case 'json':\r\n                return TYPE_STR | TYPE_JSON;\r\n\r\n            case 's':\r\n            case 'str':\r\n                return TYPE_STR;\r\n\r\n            case 'i':\r\n            case 'int':\r\n                return TYPE_INT;\r\n\r\n            case 'u':\r\n            case 'uint':\r\n                return TYPE_UINT;\r\n\r\n            case 'f':\r\n            case 'float':\r\n                return TYPE_FLOAT;\r\n\r\n            default:\r\n                throw new Error(`Unknown type: ${type}`);\r\n        }\r\n    }\r\n}\r\n\r\n//---]>\r\n\r\nObject.assign(module.exports, {\r\n    get isBE() { return isBigEndian; },\r\n    get isLE() { return !isBigEndian; }\r\n})\r\n\r\n//-----------------------------------------------------\r\n\r\nfunction blitBuffer(src, dst, offset, length) {\r\n    if(!length) {\r\n        return 0;\r\n    }\r\n\r\n    //-------]>\r\n\r\n    const dstLen = dst.length;\r\n    const srcLen = src.length;\r\n\r\n    let i, t;\r\n\r\n    //-------]>\r\n\r\n    for(i = 0; i < length; ++i) {\r\n        t = i + offset;\r\n\r\n        if(t >= dstLen || i >= srcLen) {\r\n            break;\r\n        }\r\n\r\n        dst[t] = src[i];\r\n    }\r\n\r\n    //-------]>\r\n\r\n    return i;\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.js\");\n",""],"names":["XBuffer","Buffer","MAX_ARGUMENTS_LENGTH","K_MAX_LENGTH","allocUnsafe","allocUnsafeSlow","length","RangeError","buf","Uint8Array","write","toString","string","offset","remaining","blitBuffer","utf8ToBytes","encoding","start","end","utf8Slice","units","Infinity","codePoint","leadSurrogate","bytes","Array","i","charCodeAt","push","Error","Math","min","res","firstByte","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","len","String","fromCharCode","apply","slice","isBigEndian","a","Uint32Array","b","buffer","byteOffset","byteLength","module","exports","schema","TYPE_BIN","TYPE_STR","TYPE_INT","TYPE_UINT","TYPE_FLOAT","TYPE_JSON","isArray","schemaContNames","some","e","split","schemaDontContNames","int64size","BigInt64Array","BYTES_PER_ELEMENT","isPrimitive","schLen","fields","pktDataBuf","pktOffset","pktMinSize","pktMaxSize","pktDataHolderArr","pktDataHolderObj","Object","create","reverse","subType","name","type","getTypeId","replace","size","parseInt","buildTypedBuf","bufType","bufAType","bufBytes","bufABytes","minSize","maxSize","value","pack","unpack","data","target","outTg","fieldIdx","pktSize","input","field","JSON","stringify","zeroValue","BigInt","isNaN","isFinite","tIdx","bin","cbEndInfo","asCopy","asArray","undefined","curOffset","pktOffsetStart","byteLen","from","TextDecoder","decode","call","parse","Uint16Array","Int8Array","Int16Array","Int32Array","BigUint64Array","Float32Array","Float64Array","assign","isBE","isLE","src","dst","dstLen","srcLen","t"],"sourceRoot":""}